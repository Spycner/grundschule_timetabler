"""add_schedule_model

Revision ID: 4360045a52c4
Revises: d2943aff3428
Create Date: 2025-08-03 16:02:40.813921

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4360045a52c4'
down_revision: Union[str, Sequence[str], None] = 'd2943aff3428'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('timeslot_id', sa.Integer(), nullable=False),
    sa.Column('room', sa.String(), nullable=True),
    sa.Column('week_type', sa.String(length=3), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.ForeignKeyConstraint(['timeslot_id'], ['timeslots.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('class_id', 'timeslot_id', 'week_type', name='uq_schedule_class_timeslot'),
    sa.UniqueConstraint('teacher_id', 'timeslot_id', 'week_type', name='uq_schedule_teacher_timeslot')
    )
    with op.batch_alter_table('schedules', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_schedules_class_id'), ['class_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_schedules_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_schedules_room'), ['room'], unique=False)
        batch_op.create_index(batch_op.f('ix_schedules_subject_id'), ['subject_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_schedules_teacher_id'), ['teacher_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_schedules_timeslot_id'), ['timeslot_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('schedules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_schedules_timeslot_id'))
        batch_op.drop_index(batch_op.f('ix_schedules_teacher_id'))
        batch_op.drop_index(batch_op.f('ix_schedules_subject_id'))
        batch_op.drop_index(batch_op.f('ix_schedules_room'))
        batch_op.drop_index(batch_op.f('ix_schedules_id'))
        batch_op.drop_index(batch_op.f('ix_schedules_class_id'))

    op.drop_table('schedules')
    # ### end Alembic commands ###
