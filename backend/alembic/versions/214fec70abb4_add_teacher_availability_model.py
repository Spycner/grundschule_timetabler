"""add_teacher_availability_model

Revision ID: 214fec70abb4
Revises: 4360045a52c4
Create Date: 2025-08-03 16:41:29.629667

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '214fec70abb4'
down_revision: Union[str, Sequence[str], None] = '4360045a52c4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('teacher_availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('weekday', sa.Integer(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('availability_type', sa.Enum('AVAILABLE', 'BLOCKED', 'PREFERRED', name='availabilitytype'), nullable=False),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.Column('effective_until', sa.Date(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('period >= 1 AND period <= 8', name='ck_period_range'),
    sa.CheckConstraint('weekday >= 0 AND weekday <= 4', name='ck_weekday_range'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('teacher_id', 'weekday', 'period', 'effective_from', name='uq_teacher_availability')
    )
    with op.batch_alter_table('teacher_availability', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_teacher_availability_effective_from'), ['effective_from'], unique=False)
        batch_op.create_index(batch_op.f('ix_teacher_availability_effective_until'), ['effective_until'], unique=False)
        batch_op.create_index(batch_op.f('ix_teacher_availability_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_teacher_availability_period'), ['period'], unique=False)
        batch_op.create_index(batch_op.f('ix_teacher_availability_teacher_id'), ['teacher_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_teacher_availability_weekday'), ['weekday'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('teacher_availability', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_teacher_availability_weekday'))
        batch_op.drop_index(batch_op.f('ix_teacher_availability_teacher_id'))
        batch_op.drop_index(batch_op.f('ix_teacher_availability_period'))
        batch_op.drop_index(batch_op.f('ix_teacher_availability_id'))
        batch_op.drop_index(batch_op.f('ix_teacher_availability_effective_until'))
        batch_op.drop_index(batch_op.f('ix_teacher_availability_effective_from'))

    op.drop_table('teacher_availability')
    # ### end Alembic commands ###
