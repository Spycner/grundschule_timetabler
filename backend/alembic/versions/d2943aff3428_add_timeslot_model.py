"""add_timeslot_model

Revision ID: d2943aff3428
Revises: 15b0cf10a170
Create Date: 2025-08-03 15:48:38.482166

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd2943aff3428'
down_revision: Union[str, Sequence[str], None] = '15b0cf10a170'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('timeslots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('day', sa.Integer(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('is_break', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('day', 'period', name='uq_timeslot_day_period')
    )
    with op.batch_alter_table('timeslots', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_timeslots_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('timeslots', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_timeslots_id'))

    op.drop_table('timeslots')
    # ### end Alembic commands ###
